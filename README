
Fixes two minor eggtimer bugs.


== Changes ==

Fixes a bug for the eggtimer display: when the eggtimer times out, it should revert its
display (if active) back to the value it started at ("default", in the code), such that
the user knows what time interval just timed out. I've fixed the code so that the hours
and minutes are reverted, not just the seconds, so this now operates as desired.

I've also added a declaration (extern) for the menu_skip_next(...) function, which is
used by the eggtimer.  Without this, the function is implicitally declared, which may or
may not create problems (I hadn't noticed any).


== Status ==

Time-keeping, alarm, stopwatch, and eggtimer seem to work, though haven't been extensively
tested.


== Todo ==

  * Make menu item for configuring time-of-day chime, remove hard-coded beep at noon.

  * Make stop_buzzer function aware of which buzzer it's stopping (alarm, eggtimer, etc.)

  * Fix bug when displaying seconds: AM/PM indicator doesn't change when rolling over.

  * Verify changes haven't disrupted other code

  * Combine sync and rfbsl menus (just an idea)

  * Tidy up menu code for battery and rfbsl when using hidden rfbsl option. (Should probably
    merge their display functions for this mode, rather than use the display_discret_rfbsl
    hack.)

  * Update code sizes in config script (e.g. day of week now has a larger delta-codesize).

  * Re-arrange use of Timer A, now that TIMER0_A0 interrupt is unused

  * Update and/or verify IAR project file (probably just need to add "rtc.c" and "rtc.h"
    references somewhere)

== Requirements ==

msp430-gcc4 http://mspgcc4.sourceforge.net/
make
python http://python.org

== Supported Compilers ==

msp430-gcc4
   Working combinations:
   gcc=4.4.3 binutils=2.20.1 libc=20100430

IAR msp430

Patches for more (more efficient) compilers are welcome :-)


== HOWTO ==

Copy gcc/intrinsics.h into [msp430-gcc-path]/msp430/include/intrinsics.h

To configure your image, run:

   make config

which will generate a config.h file that contains the settings for your build.

To compile the image run:

   make


It is HIGHLY suggested to make a clean build before you flash the image with:

   make clean main

== Problems ==

 * Compile / Link problems:
   If you get error messages like this one:

     msp430/bin/ld: build/eZChronos.elf section `.text' will not fit in region `text'
     .../msp430/bin/ld: section .vectors loaded at [000000000000ff80,000000000000ffff] overlaps section .text loaded at [0000000000008000,0000000000013343]
     .../msp430/bin/ld: region `text' overflowed by 13250 bytes
     collect2: ld returned 1 exit status

    or
     
     section .vectors loaded at [0000ff80,0000ffff] overlaps section .data loaded at [0000ff4e,0000ffcb]

   Your image is simply to large and will not fit into the flash. Try to disable some modules with make config and try again
   Or even better, send some patches that reduce code size ;-)

== Difference to the TI Firmware ==

 * More Features that can be configured with make config
 * Day of week
 * Disable 12h support (saves space)
 * Sleep Phase Clock - primary designed for http://github.com/poelzi/uberclock
 * The wireless flashing starts differently:
   Select RFBSL, Press DOWN to unlock, Press # long to start
 * No BlueRobin support. BlueRobin is a closed source binary blob.
   We don't have a compatible object file for that
 * Pressing STAR and UP long sets silent mode (no beep)

== Usefull Tools ==
 * mspdebug - debugger, proxy for gdb, flasher, ...  
     http://mspdebug.sourceforge.net
 * msp430static - static analyzer for sourcecode
     http://msp430static.sourceforge.net/
   run 'make source_index' to index all source files
